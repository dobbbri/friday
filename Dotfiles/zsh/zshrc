# Path to your oh-my-zsh installation.
export ZSH="/Users/sldobri/.oh-my-zsh"
export ZSH_CUSTOM="$ZSH/custom"
export NODE_ENV="development"

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH="/usr/local/opt/node@14/bin:$PATH"
export PATH="/usr/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/bin:$PATH"
export PATH="`npm global bin`:$PATH"
export PATH="$PATH:$HOME/.rvm/bin"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="yyyy-mm-dd"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
ZSH_THEME=""

# TMUX
# Automatically start tmux
# ZSH_TMUX_AUTOSTART=true

# Automatically connect to a previous session if it exists
# ZSH_TMUX_AUTOCONNECT=true

# Enable command auto-correction.
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

ZSH_DISABLE_COMPFIX="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  # node
  brew
  # tmux
  # npm
  git-extras
  osx
  z
  )


# Hide user@hostname if it's expected default user
prompt_context(){}

# Setting rg as the default source for fzf
export FZF_DEFAULT_COMMAND='rg --files'

# Apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Set location of z installation
# ./usr/local/etc/profile.d/z.sh

## FZF FUNCTIONS ##

# fo [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fo() {
  local files
  IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

# fh [FUZZY PATTERN] - Search in command history
fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
}

# fbr [FUZZY PATTERN] - Checkout specified branch
# Include remote branches, sorted by most recent commit and limited to 30
fgb() {
  local branches branch
  branches=$(git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format="%(refname:short)") &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

# tm [SESSION_NAME | FUZZY PATTERN] - create new tmux session, or switch to existing one.
# Running `tm` will let you fuzzy-find a session mame
# Passing an argument to `ftm` will switch to that session if it exists or create it otherwise
ftm() {
  [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
  if [ $1 ]; then
    tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -s $1 && tmux $change -t "$1"); return
  fi
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}

# tm [SESSION_NAME | FUZZY PATTERN] - delete tmux session
# Running `tm` will let you fuzzy-find a session mame to delete
# Passing an argument to `ftm` will delete that session if it exists
ftmk() {
  if [ $1 ]; then
    tmux kill-session -t "$1"; return
  fi
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux kill-session -t "$session" || echo "No session found to delete."
}

# fuzzy grep via rg and open in vim with line number
fgr() {
  local file
  local line

  read -r file line <<<"$(rg --no-heading --line-number $@ | fzf -0 -1 | awk -F: '{print $1, $2}')"

  if [[ -n $file ]]
  then
     vim $file +$line
  fi
}

# create e move to folder
function mkcd()
{
  mkdir -p "$*"
  cd "$*"
}

function mksh()
{
  touch "$*"
  echo "#!/bin/bash" > "$*"
  chmod u+x "$*"
  open -a "Sublime Text" "S*"
}

function start-repo()
{
  git init
  gaac 'first commit'
  git remote add origin https://github.com/dobbbri/"$*".git
  git remote set-url origin git@github.com:dobbbri/"$*".git
  git push -u origin master
}


# Enabled zsh-autosuggestions
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# Enabled zsh-syntax-highlighting
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Set default editor to nvim
export EDITOR='nvim'

# Enabled true color support for terminals
export NVIM_TUI_ENABLE_TRUE_COLOR=1

# Aliases
alias vim="nvim"
alias top="vtop --theme=wizard"
alias old-top="/usr/bin/top"

# neovim
alias vim-ini="vim .config/nvim/init.vim"
alias vim-plg="vim .config/nvim/plugins.vim"
alias vim-coc="vim .config/nvim/coc-settings.json"

# node modules
alias removeAllNodeFiles='find . -name "node_modules" -print0 | xargs -0 rm -rf'
alias findAllNodeFiles='find . -name "node_modules"'

# Previewing Locally
alias preview='serve -s dist'

# Editors
alias s.='subl .'
alias c.='code .  --disable-gpu'

# Projects
alias wrm='cd /Volumes/Projects/wr-manager && clear && c.'
alias wrp='cd /Volumes/Projects/wr-presenter && clear && c.'

# Sites
alias anp='cd /Volumes/Sites/agua_nova_piscinas && clear && s.'
alias ptOld='cd /Volumes/Sites/pousada_do_tucunare && clear && s.'
alias r3c='cd /Volumes/Sites/rancho_tres_coracoes_2019 && clear && s.'
alias q1s='cd /Volumes/Sites/quero1site_2020 && clear && s. && nrd'
alias sc='cd /Volumes/Sites/shopping_da_carne_2020 && clear && s. && nrd'
alias fa='cd /Volumes/Sites/filmAgora_2020 && clear && s. && nrd'
alias dm='cd /Volumes/Sites/dular_moveis_2020 && clear && s. && nrd'
alias co='cd /Volumes/Sites/colchoes_oriental_2020 && clear && s. && nrd'
alias pt='cd /Volumes/Sites/pousada_do_tucunare_2020 && clear && s. && nrd'

# Ping
alias ping-all='p-anp && p-pdt && p-rtc'
alias p-anp='ping www.aguanovapiscinas.com -c 3'
alias p-pdt='ping www.pousadadotucunare.net -c 3'
alias p-rtc='ping www.ranchotrescoracoes.com.br -c 3'

# Codes
alias bp='cd /Volumes/Codes/beauty_point && clear && open "http://localhost:8080/" && c. && nrs'

# remove the ‘application downloaded from the internet’ error message
alias xatcr='xattr -cr '

# download videos from webpage
alias ydl='cd /Volumes/Pendrive/Downloads && youtube-dl'

# reset dns
alias dns:r='networksetup -setairportpower en0 off && sudo killall -HUP mDNSResponder && echo macOS DNS Cache Reset && networksetup -setairportpower en0 on'

# listen evangelizar fm
alias eva='open "http://evanam.crossradio.com.br:8002/stream/1;"'

# brew
alias bi="brew install"
alias bci="brew cask install"
alias bs="brew search"
alias bcs="brew cask search"
alias bu="brew uninstall"
alias bcu="brew cask uninstall"
alias br="bu"

#npm,
alias nr='npm run'
alias nrd='npm run dev'
alias nrb='npm run build'
alias nrg='npm run generate && f && open /Applications/Cyberduck.app'
alias nrs='npm run serve'
alias nrstt='npm run start'
alias nrss='npm run start:api'
alias nrsc='npm run start:app'
alias ni='npm install'
alias nig='npm install -g'
alias nu='npm uninstall'
alias nug='npm uninstall -g'
alias nls='npm ls -g' # List installed packages
alias nls='npm ls' # List installed packages
alias nls='npm prune' # Remove un-used packages from node_modules folder
alias nup='npm update' # Update all packages listed in package.json
alias nrdup='npm dedupe' # Remove duplicate packages from node_modules
alias nclean='npm cache clean -f' # Clean npm cache


# moving
alias ..='cd ..'
alias ...='cd ../..'
alias home='cd ~/'
alias dbox='cd $HOME/Dropbox/Mac'
alias prj='cd /Volumes/Projects && clear'
alias sites='cd /Volumes/Sites && clear '


# aliases
alias ls='ls -lhaG'
alias lr='ls -lhtr'
alias history='fc -il 1i'
alias c='clear'
alias f='open .'
alias t='trash --force'
alias rm='rm -ifr'
alias cpu='top -o cpu'   # CPU
alias mem='top -o rsize' # Memory
alias te='tree'


# Pretty print the path
alias path="echo $PATH | tr -s ':' '\n'"


# Atualizar brew
alias bubu="brew update && brew upgrade && brew cleanup && brew cask upgrade && brew doctor"


# diversos
alias bat="pmset -g batt"
# alias speed="speed-test"
alias update="sudo softwareupdate -v -i -a"
# alias tempo="curl http://wttr.in/pereira_barreto"


# ZSH
alias sz='source ~/.zshrc'
alias zsh='subl ~/Dropbox/Mac/Settings/Dotfiles/zsh/zshrc'
alias ohmyzsh="subl ~/.oh-my-zsh"
alias zshup="upgrade_oh_my_zsh"


# Git
alias gaa="git add ."
alias gs="git status --short"
alias gl="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --branches"
alias gc="git commit -m"
alias gp="git push"
alias gps="git push && git status --short"
# alias g:ps="dig a bitbucket.org && git push && git status"
alias gnah='git reset --hard && git clean -df'
alias gaac='rm -rf dist && git add . && git commit -m'
alias gsync='git pull && git push'


# bitbucket
alias bit='dig a bitbucket.org'


# mongodb
alias mdb:kill='kill -kill $(lsof -t -i :27017)'
alias mdb:s='mongod'
alias mdbstt='mongod --dbpath=/Volumes/Pendrive/data/db'


# clean Right Menu
alias cleanRightMenu="home && echo 'cleaning...' && /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user"


# bkps
alias dot-bkp="$HOME/Dropbox/Mac/Scripts/dot-bkp.sh"
alias dot-restore="$HOME/Dropbox/Mac/Settings/dot-restore.sh"


source $ZSH/oh-my-zsh.sh

# Set Spaceship as prompt
autoload -U promptinit; promptinit
prompt spaceship
SPACESHIP_PACKAGE_SHOW=false
SPACESHIP_NODE_SHOW=false
SPACESHIP_GIT_STATUS_STASHED=''
